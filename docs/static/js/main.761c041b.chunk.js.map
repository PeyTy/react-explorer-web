{"version":3,"sources":["components/Desktop.tsx","contexts/DemoContext.tsx","components/Folders.tsx","components/Drives.tsx","components/ExplorerWindow.tsx","components/TrayDateTime.tsx","components/TaskBar.tsx","components/Windows10.tsx","contexts/DefaultValues.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["className","title","DemoContext","React","createContext","undefined","Provider","Consumer","folders","length","map","folder","key","name","selected","icon","drives","drive","letter","hint","style","width","free","size","scale","useState","dragging","setDragging","left","top","position","setPosition","lastPosition","setLastPosition","useEffect","onMouseMove","e","pageX","Math","max","pageY","onMouseUp","document","addEventListener","removeEventListener","onMouseDown","stopPropagation","type","placeholder","visibility","Folders","Drives","getDateTime","Date","toLocaleString","weekday","year","month","day","getTime","toLocaleTimeString","hour","minute","getDate","toLocaleDateString","dateTime","setDateTime","time","setTime","date","setDate","interval","setInterval","clearInterval","TrayDateTime","Desktop","ExplorerWindow","TaskBar","values","App","value","demoContextDefaultValues","Windows10","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.761c041b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"desktop\">\r\n        <div className=\"recycle\" title=\"Contains the files and folders that you have deleted.\">\r\n          <div className=\"icon\"></div>\r\n            <span>Recycle Bin</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"osversion\">\r\n        <span>Windows 10 Enterprise Insider Preview</span>\r\n        <span>Evaluation copy. Build 18962.rs_client_servicing.190813-1819</span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport declare type DemoContextType = {\r\n\tfolders: {name: string, icon: string, selected?: boolean}[],\r\n\tdrives: {\r\n\t\t\tname: string,\r\n\t\t\tletter: string,\r\n\t\t\ticon: string,\r\n\t\t\tsize: number,\r\n\t\t\tfree: number,\r\n\t\t\tscale: string,\r\n\t\t\thint?: string,\r\n\t\t\tselected?: boolean\r\n\t\t}[]\r\n}\r\n\r\nconst DemoContext = React.createContext(undefined as unknown as DemoContextType)\r\n\r\nconst { Provider, Consumer } = DemoContext\r\n\r\nexport {\r\n\tProvider as DemoContextProvider,\r\n\tConsumer as DemoContextConsumer\r\n}\r\n","import React from 'react'\r\nimport { DemoContextConsumer } from '../contexts/DemoContext'\r\n\r\nexport default () => {\r\n  return (\r\n    <DemoContextConsumer>{({folders}) => (\r\n      <div className=\"folders\">\r\n        <div className=\"header\">\r\n          <div className=\"dropdown\"></div>\r\n          <span className=\"title\">Folders ({folders.length})</span>\r\n          <div className=\"viewline\"></div>\r\n        </div>\r\n        <ul className=\"struct\">\r\n          {folders.map((folder) => (\r\n            <li key={folder.name} className={folder.selected? \"selected\" : \"\"}>\r\n              <div className=\"iconwrapper\">\r\n                <div className={\"icon \" + folder.icon}></div>\r\n              </div>\r\n              <div className=\"infowrapper\">\r\n                <span className=\"name\">{folder.name}</span>\r\n                <span className=\"place\">&nbsp;</span>\r\n                {<div className=\"icon pin\"></div>&&null}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}</DemoContextConsumer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { DemoContextConsumer } from '../contexts/DemoContext'\r\n\r\nexport default () => {\r\n  return (\r\n    <DemoContextConsumer>{({drives}) => (\r\n      <div className=\"files\">\r\n        <div className=\"header\">\r\n          <div className=\"dropdown\"></div>\r\n          <span className=\"title\">Devices and drives ({drives.length})</span>\r\n          <div className=\"viewline\"></div>\r\n        </div>\r\n        <ul className=\"struct\">\r\n          {drives.map((drive) => (\r\n            <li key={drive.name} className={drive.selected? \"selected\" : \"\"}>\r\n              <div className=\"iconwrapper\">\r\n                <div className={\"icon \" + drive.icon}></div>\r\n              </div>\r\n              <div className=\"infowrapper\">\r\n                <span className=\"name\">{drive.name} ({drive.letter}:)</span>\r\n                {\r\n                  drive.hint?\r\n                    <div>\r\n                      {drive.hint}\r\n                    </div>\r\n                  :\r\n                    <div className=\"litter\">\r\n                      <div className=\"busy\" style={{width: (1 - (drive.free/drive.size)) * 100 + \"%\"}}></div>\r\n                    </div>\r\n                }\r\n                <span className=\"free\">{drive.free} {drive.free === 0? \"bytes\" : drive.scale} free of {drive.size} {drive.scale}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}</DemoContextConsumer>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport Folders from './Folders'\r\nimport Drives from './Drives'\r\n\r\nexport default () => {\r\n  const [dragging, setDragging] = useState(false)\r\n  const [position, setPosition] = useState({left: 40, top: 40})\r\n  const [lastPosition, setLastPosition] = useState({left: 0, top: 0})\r\n\r\n  useEffect(() => {\r\n\r\n    const onMouseMove = (e: any) => {\r\n      setPosition({\r\n        left: position.left + e.pageX - lastPosition.left,\r\n        top: Math.max(0, position.top + e.pageY - lastPosition.top)\r\n      })\r\n      setLastPosition({left: e.pageX, top: e.pageY})\r\n    }\r\n\r\n    const onMouseUp = () => {\r\n      setDragging(false)\r\n    }\r\n\r\n    if (dragging) {\r\n      document.addEventListener('mousemove', onMouseMove)\r\n      document.addEventListener('mouseup', onMouseUp)\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onMouseMove)\r\n      document.removeEventListener('mouseup', onMouseUp)\r\n    }\r\n  }, [dragging])\r\n\r\n  const onMouseDown = (e: any) => {\r\n    setLastPosition({left: e.pageX, top: e.pageY})\r\n    setDragging(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"explorer\"\r\n        style={{\r\n          left: position.left + \"px\",\r\n          top: position.top + \"px\",\r\n        }}\r\n      >\r\n        <div className=\"titlebar\" onMouseDown={onMouseDown} style={{}}>\r\n          <div className=\"title\">\r\n            <div className=\"icon\"></div>\r\n            <span>This PC</span>\r\n          </div>\r\n          <div className=\"buttons\" onMouseDown={(e)=>{e.stopPropagation()}}>\r\n            <input type=\"button\" title=\"Minimize\" className=\"minimize\"/><input type=\"button\" title=\"Maximize\" className=\"maximize\"/><input type=\"button\" title=\"Close\" className=\"close\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"ribbon\">\r\n          <ul>\r\n            <li>File</li>\r\n            <li>Computer</li>\r\n            <li>View</li>\r\n          </ul>\r\n          <div className=\"other\">\r\n            <input type=\"button\" className=\"open\"/><input type=\"button\" className=\"help\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar\">\r\n          <div className=\"buttons\">\r\n            <input type=\"button\" className=\"back\"/><input type=\"button\" className=\"forward\"/><input type=\"button\" className=\"history\"/><input type=\"button\" className=\"up active\"/>\r\n          </div>\r\n          <div className=\"adress\">\r\n            <div className=\"icon\"></div>\r\n            <div className=\"dropdown_arrow\"></div>\r\n            <span>This PC</span>\r\n            <input type=\"button\" title=\"Previous Locations\" className=\"dropdown\"/>\r\n            <input type=\"button\" title='Refresh \"This PC\" (F5)' className=\"refresh\"/>\r\n          </div>\r\n          <input type=\"text\" className=\"search\" placeholder=\"Search This PC\"/>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"sidebar\">\r\n            <ul>\r\n              <li>\r\n                <div className=\"drop\"></div>\r\n                <div className=\"favorites icon\"></div>\r\n                <span>Quick access</span>\r\n              </li>\r\n              <li>\r\n                <div className=\"drop\" style={{visibility: \"hidden\"}}></div>\r\n                <div className=\"oneDrive icon\"></div>\r\n                <span>OneDrive</span></li>\r\n              <li className=\"current\">\r\n                <div className=\"drop\"></div>\r\n                <div className=\"thisPC icon\"></div>\r\n                <span>This PC</span>\r\n              </li>\r\n              <li className=\"open\">\r\n                <div className=\"drop\" style={{visibility: \"hidden\"}}></div>\r\n                <div className=\"network icon\"></div>\r\n                <span>Network</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"folderView\">\r\n            <Folders/>\r\n            <Drives/>\r\n          </div>\r\n        </div>\r\n        <div className=\"statusbar\">\r\n          <span title=\"Total item count\">11 items</span>\r\n          <span title=\"Selected item count and size\">2 items selected</span>\r\n          <input type=\"button\" title=\"Displays information about each item in the window. (Ctrl+Shift+6)\" className=\"unknown1\"/>\r\n          <input type=\"button\" title=\"Displays items by using large thumbnails. (Ctrl+Shift+2)\" className=\"unknown2\"/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport default () => {\r\n  const getDateTime = () => new Date().toLocaleString([], { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })\r\n  const getTime = () => new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n  const getDate = () => new Date().toLocaleDateString()\r\n\r\n  const [dateTime, setDateTime] = useState(getDateTime())\r\n  const [time, setTime] = useState(getTime())\r\n  const [date, setDate] = useState(getDate())\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setDateTime(getDateTime())\r\n      setTime(getTime())\r\n      setDate(getDate())\r\n    }, 1000)\r\n    return () => clearInterval(interval);\r\n  }, [dateTime, time, date])\r\n\r\n  return (\r\n    <div className=\"date_time\" title={dateTime}>\r\n      <span className=\"time\">{time}</span>\r\n      <span className=\"date\">{date}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport TrayDateTime from './TrayDateTime'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"taskbar\">\r\n        <div className=\"start\" title=\"Start\"></div>\r\n        <div className=\"tasks\">\r\n          <div className=\"app\" title=\"This PC\">\r\n            <div className=\"icon\"></div>\r\n            {<div className=\"name\">This PC</div>&&null}\r\n          </div>\r\n        </div>\r\n        <div className=\"onedrive\" title=\"OneDrive\"></div>\r\n        <div className=\"network\" title=\"Network\"></div>\r\n        <div className=\"sound\" title=\"Speakers: 32%\"></div>\r\n        <div className=\"current_language\" title=\"English (United States)\">\r\n          <span className=\"time\">ENG</span>\r\n        </div>\r\n        <TrayDateTime/>\r\n        <div className=\"info_center\" title=\"No new notifications\"></div>\r\n        <div className=\"show_desktop\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Desktop from './Desktop'\r\nimport ExplorerWindow from './ExplorerWindow'\r\nimport TaskBar from './TaskBar'\r\n\r\nexport default () => (\r\n  <>\r\n    <div className=\"workspace\">\r\n      <Desktop/>\r\n      <ExplorerWindow/>\r\n    </div>\r\n    <TaskBar/>\r\n  </>\r\n)\r\n","import { DemoContextType } from './DemoContext'\r\n\r\nconst values: DemoContextType = {\r\n  folders: [\r\n    {name: \"3D Objects\", icon: \"stereo\"},\r\n    {name: \"Desktop\", icon: \"desktop\", selected: true},\r\n    {name: \"Documents\", icon: \"documents\"},\r\n    {name: \"Downloads\", icon: \"downloads\"},\r\n    {name: \"Music\", icon: \"music\"},\r\n    {name: \"Pictures\", icon: \"images\"},\r\n    {name: \"Videos\", icon: \"video\"},\r\n  ],\r\n  drives: [\r\n    {name: \"Local Disk\", letter: \"C\", icon: \"disk\", size: 111, free: 81.2, scale: \"GB\"},\r\n    {name: \"DVD Drive\", letter: \"H\", icon: \"usb\", size: 4.57, free: 0, scale: \"GB\", hint: \"CENA_X64FREE_EN-US_DV9\", selected: true},\r\n    {name: \"GreenteaOS\", letter: \"G\", icon: \"gos\", size: 7.43, free: 7.23, scale: \"GB\"},\r\n    {name: \"RAMDisk\", letter: \"R\", icon: \"ram\", size: 396, free: 180, scale: \"MB\"}\r\n   ]\r\n}\r\n\r\nexport default values\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport Windows10 from './components/Windows10'\r\nimport { DemoContextProvider } from './contexts/DemoContext'\r\nimport demoContextDefaultValues from './contexts/DefaultValues'\r\n\r\nfunction App() {\r\n  return (\r\n  \t<DemoContextProvider value={demoContextDefaultValues}>\r\n    \t<Windows10/>\r\n    </DemoContextProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './reset.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}